swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  # Chemin permettant de visualiser toutes les transactions pour le mois en cours, groupée par compte
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get all transactions for the current month, grouped by account
      description: API for fetching a list of transactions for the current month, grouped by account

      parameters:
        - name: Authorization
          in: header
          type: string
          description: Attach Bearer JWT token
          required: true
        - name: period
          in: body
          description: Current Month
          required: true
          schema:
            $ref: "#/definitions/TransactionsPeriod"
      produces:
        - application/json
      responses:
        "200":
          description: Transactions for the current month retrieved successully
          schema:
            $ref: "#/definitions/ListOfTransactions"
        "400":
          description: Period bad request
        "401":
          description: User not connected
        "403":
          description: Invalid Token
        "500":
          description: Internal Server Error

  # Chemin permettant de visualiser les détails d'une transaction
  /transaction/{transactionID}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Details of a transaction
      description: Api for fetching details of a transaction with its Id
      parameters:
        - name: transactionID
          in: path
          required: true
          description: ID of the transaction
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Details of transaction retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "401":
          description: User not connected or Invalid Token
        "404":
          description: TransactionID Not Found
        "500":
          description: Internal Server Error

  # Chemin permettant d'ajouter des informations sur une transaction'
  /transaction/{transactionID}/note:
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Add a note on a transaction
      description: Add a note to a transaction with its Id
      parameters:
        - name: transactionID
          in: path
          required: true
          description: ID of the transaction
          type: string
        - name: note
          in: body
          required: true
          description: information additional
          schema:
            $ref: "#/definitions/TransactionNote"
      produces:
        - application/json
      responses:
        "201":
          description: Note successfully added
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields of note
        "401":
          description: User not connected or Invalid Token
        "404":
          description: TransactionID Not Found
        "500":
          description: Internal Server Error

    # Chemin permettant de modifier des informations sur une transaction'
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Modify the note of a transaction
      description: Modify a note in a transaction with its Id
      parameters:
        - name: transactionID
          in: path
          required: true
          description: ID of the transaction
          type: string
        - in: body
          name: note
          description: Update note of a transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionNote"
      produces:
        - application/json
      responses:
        "200":
          description: Note successfully modified
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields of note
        "401":
          description: User not connected or Invalid Token
        "404":
          description: TransactionID Not Found
        "500":
          description: Internal Server Error

    # Chemin permettant de supprimer des informations sur une transaction'
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete the note of a transaction
      description: Api for delete informations of a transaction with its Id
      parameters:
        - name: transactionID
          in: path
          required: true
          description: ID of the transaction
          type: string
      produces:
        - application/json
      responses:
        "204":
          description: Note successfully deleted
        "401":
          description: User not connected or Invalid Token
        "404":
          description: TransactionID Not Found
        "500":
          description: Internal Server Error

    # Chemin permettant de modifier la catégorie d'une transaction'
  /transaction/{transactionID}/category:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update a category on a transaction
      description: Update a category to a transaction with its Id
      parameters:
        - name: transactionID
          in: path
          required: true
          description: ID of the transaction
          type: string
        - name: category
          in: body
          required: true
          description: Update category of a transaction
          schema:
            $ref: "#/definitions/TransactionCategory"
      produces:
        - application/json
      responses:
        "200":
          description: Category of transaction successfully updated
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields of category
        "401":
          description: User not connected or Invalid Token
        "404":
          description: TransactionID Not Found
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string

  TransactionsPeriod:
    type: object
    properties:
      from:
        type: string
        format: date
        description: start date (30days before)
        example: "2024-01-01"
      to:
        type: string
        format: date
        description: end date (today)
        example: "2024-02-01"

  Transaction:
    type: object
    properties:
      TransactionId:
        type: string
        description: transaction's id
        example: "264351"
      Date:
        type: string
        description: transaction's date
        example: "27-02-2020"
      Description:
        type: string
        description: transaction's description
        example: "Golden Sun Bakery"
      Amount:
        type: integer
        description: transaction's amount
        example: 8.00
      Balance:
        type: integer
        description: transaction's balance
        example: 298.00
      Transaction type:
        type: string
        description: transaction's type
        example: "Electronic"
      Category:
        type: string
        description: transaction's category
        example: "Food"
      Note:
        type: string
        description: transaction's note
        example: "lorem ipsum"

  ListOfTransactions:
    type: object
    properties:
      account-1:
        type: array
        items:
          $ref: "#/definitions/Transaction"
        minItems: 2
      account-2:
        type: array
        items:
          $ref: "#/definitions/Transaction"
        minItems: 2

  TransactionNote:
    type: object
    properties:
      note:
        type: string

  TransactionCategory:
    type: object
    properties:
      category:
        type: string
