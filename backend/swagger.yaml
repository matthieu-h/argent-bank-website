swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  # Chemin permettant de visualiser les comptes de l'utilisateur
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Accounts API
      description: API for fetching user accounts
      responses:
        "200":
          description: User accounts retrieved successfully
          schema:
            $ref: "#/definitions/UserAccounts"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  # Chemin permettant de visualiser les transaction d'un compte de l'utilisateur
  /user/accounts/{accountID}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: API transactions of a user's account
      description: API for fetching an account transaction list with its ID
      parameters:
        - in: path
          name: accountID
          description: ID of the user's account
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User account transactions retrieved successfully
          schema:
            $ref: "#/definitions/UserAccountTransactions"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error

    # Chemin permettant de visualiser les d√©tails d'une transaction
  /user/accounts/{accountID}/transactions/{transactionID}/details:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Details of a transaction
      description: Api for fetching details of a transaction with its ID
      parameters:
        - name: accountID
          in: path
          required: true
          description: ID of the user's account
          type: string
        - name: transactionID
          in: path
          required: true
          description: ID of the transaction
          type: string
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
            $ref: "#/definitions/Details"
      produces:
        - application/json
      responses:
        "200":
          description: User account transaction details retrieved successfully
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error

    # Chemin permettant d'ajouter des informations sur une transaction'
  /user/accounts/{accountID}/transactions/{transactionID}/information:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Add information in a transaction
      description: API for adding information in a transaction using transactionID
      parameters:
        - name: accountID
          in: path
          required: true
          description: ID of the user's account
          type: string
        - name: transactionID
          in: path
          required: true
          description: ID of the transaction
          type: string
        - in: body
          name: body
          description: Information Payload
          required: true
          schema:
            $ref: "#/definitions/Information"
      produces:
        - application/json
      responses:
        "200":
          description: User bank account transaction information add successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error

    # Chemin permettant de modifier des informations sur une transaction'
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Modify information in a transaction
      description: API for modifying information in a transaction using transactionID
      parameters:
        - name: accountID
          in: path
          required: true
          description: ID of the user's account
          type: string
        - name: transactionID
          in: path
          required: true
          description: ID of the transaction
          type: string
        - in: body
          name: body
          description: Information Payload
          required: true
          schema:
            $ref: "#/definitions/Information"
      produces:
        - application/json
      responses:
        "200":
          description: User bank account transaction information modifying successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error

    # Chemin permettant de supprimer des informations sur une transaction'
    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Delete information in a transaction
      description: API for deleting information in a transaction using transactionID
      parameters:
        - name: accountID
          in: path
          required: true
          description: ID of the user's account
          type: string
        - name: transactionID
          in: path
          required: true
          description: ID of the transaction
          type: string
        - in: body
          name: body
          description: Information Payload
          required: true
          schema:
            $ref: "#/definitions/Information"
      produces:
        - application/json
      responses:
        "200":
          description: User bank account transaction information delete successfully
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string

  UserAccounts:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        amount:
          type: string
        description:
          type: string
    minItems: 3
    maxItems: 3
  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
      description:
        type: string
      amount:
        type: string
      balance:
        type: string
      transaction_type:
        type: string
      category:
        type: string
      note:
        type: string
      details:
        type: string
      information:
        type: string
  UserAccountTransactions:
    type: array
    items:
      $ref: "#/definitions/Transaction"
    minItems: 1
  Details:
    properties:
      category:
        type: string
        description: transaction details
  Information:
    properties:
      note:
        type: string
        description: transaction information
